{"version":3,"sources":["webpack:///../../../src/components/VTabs/VTab.ts","webpack:///../../../src/components/VCard/index.ts","webpack:///../../../src/components/VTabs/VTabsItems.ts","webpack:///../../../src/components/VTabs/VTabItem.ts","webpack:///../../../src/mixins/ssr-bootable/index.ts","webpack:///../../../src/directives/resize/index.ts","webpack:///../../../src/mixins/mobile/index.ts","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/components/VTabs/VTabsBar.ts","webpack:///../../../src/components/VTabs/VTabsSlider.ts","webpack:///../../../src/components/VTabs/VTabs.ts"],"names":["baseMixins","name","props","ripple","type","Boolean","default","data","proxyClass","computed","classes","this","groupClasses","value","to","$router","Object","resolve","mounted","methods","click","href","indexOf","e","$el","blur","render","String","role","tabindex","keydown","h","tag","$slots","VCardActions","VCardSubtitle","VCardText","VCardTitle","mandatory","isDark","getValue","item","id","genWindowItem","isBooted","window","inserted","callback","binding","options","passive","el","unbind","Resize","mobileBreakpoint","Number","$vuetify","breakpoint","validator","v","isNaN","includes","isMobile","mobile","mobileWidth","parseInt","isNumber","width","created","$attrs","hasOwnProperty","BaseSlideGroup","mixins","directives","Touch","activeClass","centerActive","nextIcon","prevIcon","showArrows","internalItemsLength","isOverflowing","resizeTimeout","startX","scrollOffset","widths","content","wrapper","__cachedNext","genTransition","__cachedPrev","hasAffixes","Math","hasNext","hasPrev","watch","internalValue","beforeUpdate","$children","updated","genNext","slot","$scopedSlots","next","$createElement","staticClass","class","on","key","genContent","ref","genData","onResize","genIcon","icon","rtl","location","upperLocation","hasAffix","VIcon","disabled","genPrev","prev","genWrapper","start","move","end","calculateNewOffset","sign","newAbosluteOffset","direction","onAffixClick","onTouchStart","onTouchMove","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","items","lastItemPosition","length","wrapperPosition","$refs","selectedIndex","calculateCenteredOffset","selectedItem","calculateUpdatedOffset","clientWidth","selectedElement","offsetLeft","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","scrollTo","setWidths","provide","slideGroup","tabsBar","themeClasses","$route","callSlider","onRouteChange","newPath","val","oldPath","oldVal","hasNew","hasOld","undefined","setBackgroundColor","alignWithTitle","backgroundColor","centered","fixedTabs","grow","height","hideSlider","iconsAndText","optional","right","sliderColor","sliderSize","vertical","slider","left","top","transitionTime","isReversed","sliderStyles","transition","computedColor","selectedItems","activeTab","scrollWidth","genBar","style","dark","light","change","VTabsBar","genSlider","genItems","VTabsItems","VTabsSlider","color","clearTimeout","parseNodes","tab","i","vnode","modifiers","quiet"],"mappings":"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","file":"static/js/chunk-2e47960c.752b8bb5.js","sourcesContent":["// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Routable from '../../mixins/routable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { ExtractVue } from './../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Routable,\n  // Must be after routable\n  // to overwrite activeClass\n  GroupableFactory('tabsBar'),\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-tab',\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  data: () => ({\n    proxyClass: 'v-tab--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tab': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-tab--disabled': this.disabled,\n        ...this.groupClasses,\n      }\n    },\n    value (): any {\n      let to = this.to || this.href || ''\n\n      if (this.$router &&\n        this.to === Object(this.to)\n      ) {\n        const resolve = this.$router.resolve(\n          this.to,\n          this.$route,\n          this.append\n        )\n\n        to = resolve.href\n      }\n\n      return to.replace('#', '')\n    },\n  },\n\n  mounted () {\n    this.onRouteChange()\n  },\n\n  methods: {\n    click (e: KeyboardEvent | MouseEvent): void {\n      // If user provides an\n      // actual link, do not\n      // prevent default\n      if (this.href &&\n        this.href.indexOf('#') > -1\n      ) e.preventDefault()\n\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      'aria-selected': String(this.isActive),\n      role: 'tab',\n      tabindex: 0,\n    }\n    data.on = {\n      ...data.on,\n      keydown: (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    return h(tag, data, this.$slots.default)\n  },\n})\n","import VCard from './VCard'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VCardActions = createSimpleFunctional('v-card__actions')\nconst VCardSubtitle = createSimpleFunctional('v-card__subtitle')\nconst VCardText = createSimpleFunctional('v-card__text')\nconst VCardTitle = createSimpleFunctional('v-card__title')\n\nexport {\n  VCard,\n  VCardActions,\n  VCardSubtitle,\n  VCardText,\n  VCardTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCard,\n    VCardActions,\n    VCardSubtitle,\n    VCardText,\n    VCardTitle,\n  },\n}\n","// Extensions\nimport VWindow from '../VWindow/VWindow'\n\n// Types & Components\nimport { BaseItemGroup, GroupableInstance } from './../VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default VWindow.extend({\n  name: 'v-tabs-items',\n\n  props: {\n    mandatory: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VWindow.options.computed.classes.call(this),\n        'v-tabs-items': true,\n      }\n    },\n    isDark (): boolean {\n      return this.rootIsDark\n    },\n  },\n\n  methods: {\n    getValue (item: GroupableInstance, i: number) {\n      return item.id || BaseItemGroup.options.methods.getValue.call(this, item, i)\n    },\n  },\n})\n","// Extensions\nimport VWindowItem from '../VWindow/VWindowItem'\n\n/* @vue/component */\nexport default VWindowItem.extend({\n  name: 'v-tab-item',\n\n  props: {\n    id: String,\n  },\n\n  methods: {\n    genWindowItem () {\n      const item = VWindowItem.options.methods.genWindowItem.call(this)\n\n      item.data!.domProps = item.data!.domProps || {}\n      item.data!.domProps.id = this.id || this.value\n\n      return item\n    },\n  },\n})\n","import Vue from 'vue'\n\n/**\n * SSRBootable\n *\n * @mixin\n *\n * Used in layout components (drawer, toolbar, content)\n * to avoid an entry animation when using SSR\n */\nexport default Vue.extend({\n  name: 'ssr-bootable',\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  mounted () {\n    // Use setAttribute instead of dataset\n    // because dataset does not work well\n    // with unit tests\n    window.requestAnimationFrame(() => {\n      this.$el.setAttribute('data-booted', 'true')\n      this.isBooted = true\n    })\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ResizeVNodeDirective extends VNodeDirective {\n  value?: () => void\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: HTMLElement, binding: ResizeVNodeDirective) {\n  const callback = binding.value!\n  const options = binding.options || { passive: true }\n\n  window.addEventListener('resize', callback, options)\n  el._onResize = {\n    callback,\n    options,\n  }\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback()\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onResize) return\n\n  const { callback, options } = el._onResize\n  window.removeEventListener('resize', callback, options)\n  delete el._onResize\n}\n\nexport const Resize = {\n  inserted,\n  unbind,\n}\n\nexport default Resize\n","// Types\nimport { BreakpointName } from 'vuetify/types/services/breakpoint'\nimport { deprecate } from '../../util/console'\nimport Vue, { PropType } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'mobile',\n\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String] as PropType<number | BreakpointName>,\n      default (): number | BreakpointName | undefined {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify\n          ? this.$vuetify.breakpoint.mobileBreakpoint\n          : undefined\n      },\n      validator: v => (\n        !isNaN(Number(v)) ||\n        ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v))\n      ),\n    },\n  },\n\n  computed: {\n    isMobile (): boolean {\n      const {\n        mobile,\n        width,\n        name,\n        mobileBreakpoint,\n      } = this.$vuetify.breakpoint\n\n      // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile\n\n      const mobileWidth = parseInt(this.mobileBreakpoint, 10)\n      const isNumber = !isNaN(mobileWidth)\n\n      return isNumber\n        ? width < mobileWidth\n        : name === this.mobileBreakpoint\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      deprecate('mobile-break-point', 'mobile-breakpoint', this)\n    }\n  },\n})\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchmoveX: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing || Math.abs(this.scrollOffset) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      this.scrollOffset = this.startX - e.touchmoveX\n    },\n    onTouchEnd () {\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem && this.items.length) {\n        const lastItemPosition = this.items[this.items.length - 1].$el.getBoundingClientRect()\n        const wrapperPosition = this.$refs.wrapper.getBoundingClientRect()\n\n        if (\n          (this.$vuetify.rtl && wrapperPosition.right < lastItemPosition.right) ||\n          (!this.$vuetify.rtl && wrapperPosition.left > lastItemPosition.left)\n        ) {\n          this.scrollTo('prev')\n        }\n      }\n\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.4\n\n      if (offsetLeft <= currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth <= itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        // https://github.com/vuetifyjs/vuetify/issues/13212\n        // We add +1 to the wrappers width to prevent an issue where the `clientWidth`\n        // gets calculated wrongly by the browser if using a different zoom-level.\n        this.isOverflowing = this.widths.wrapper + 1 < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Components\nimport VTab from './VTab'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport SSRBootable from '../../mixins/ssr-bootable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { Route } from 'vue-router'\nimport { VNode } from 'vue'\n\ntype VTabInstance = InstanceType<typeof VTab>\n\nexport default mixins(\n  BaseSlideGroup,\n  SSRBootable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n\n  provide () {\n    return {\n      tabsBar: this,\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange',\n  },\n\n  methods: {\n    callSlider () {\n      if (!this.isBooted) return\n\n      this.$emit('call:slider')\n    },\n    genContent () {\n      const render = BaseSlideGroup.options.methods.genContent.call(this)\n\n      render.data = render.data || {}\n      render.data.staticClass += ' v-tabs-bar__content'\n\n      return render\n    },\n    onRouteChange (val: Route, oldVal: Route) {\n      /* istanbul ignore next */\n      if (this.mandatory) return\n\n      const items = this.items as unknown as VTabInstance[]\n      const newPath = val.path\n      const oldPath = oldVal.path\n\n      let hasNew = false\n      let hasOld = false\n\n      for (const item of items) {\n        if (item.to === newPath) hasNew = true\n        else if (item.to === oldPath) hasOld = true\n\n        if (hasNew && hasOld) break\n      }\n\n      // If we have an old item and not a new one\n      // it's assumed that the user navigated to\n      // a path that is not present in the items\n      if (!hasNew && hasOld) this.internalValue = undefined\n    },\n  },\n\n  render (h): VNode {\n    const render = BaseSlideGroup.options.render.call(this, h)\n\n    render.data!.attrs = {\n      role: 'tablist',\n    }\n\n    return render\n  },\n})\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\n/* @vue/component */\nexport default mixins(Colorable).extend({\n  name: 'v-tabs-slider',\n\n  render (h): VNode {\n    return h('div', this.setBackgroundColor(this.color, {\n      staticClass: 'v-tabs-slider',\n    }))\n  },\n})\n","// Styles\nimport './VTabs.sass'\n\n// Components\nimport VTabsBar from './VTabsBar'\nimport VTabsItems from './VTabsItems'\nimport VTabsSlider from './VTabsSlider'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Colorable,\n  Proxyable,\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $refs: {\n    items: InstanceType<typeof VTabsBar>\n  }\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-tabs',\n\n  directives: {\n    Resize,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    alignWithTitle: Boolean,\n    backgroundColor: String,\n    centerActive: Boolean,\n    centered: Boolean,\n    fixedTabs: Boolean,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    iconsAndText: Boolean,\n    mobileBreakpoint: [String, Number],\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    optional: Boolean,\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    right: Boolean,\n    showArrows: [Boolean, String],\n    sliderColor: String,\n    sliderSize: {\n      type: [Number, String],\n      default: 2,\n    },\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      resizeTimeout: 0,\n      slider: {\n        height: null as null | number,\n        left: null as null | number,\n        right: null as null | number,\n        top: null as null | number,\n        width: null as null | number,\n      },\n      transitionTime: 300,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tabs--align-with-title': this.alignWithTitle,\n        'v-tabs--centered': this.centered,\n        'v-tabs--fixed-tabs': this.fixedTabs,\n        'v-tabs--grow': this.grow,\n        'v-tabs--icons-and-text': this.iconsAndText,\n        'v-tabs--right': this.right,\n        'v-tabs--vertical': this.vertical,\n        ...this.themeClasses,\n      }\n    },\n    isReversed (): boolean {\n      return this.$vuetify.rtl && this.vertical\n    },\n    sliderStyles (): object {\n      return {\n        height: convertToUnit(this.slider.height),\n        left: this.isReversed ? undefined : convertToUnit(this.slider.left),\n        right: this.isReversed ? convertToUnit(this.slider.right) : undefined,\n        top: this.vertical ? convertToUnit(this.slider.top) : undefined,\n        transition: this.slider.left != null ? null : 'none',\n        width: convertToUnit(this.slider.width),\n      }\n    },\n    computedColor (): string {\n      if (this.color) return this.color\n      else if (this.isDark && !this.appIsDark) return 'white'\n      else return 'primary'\n    },\n  },\n\n  watch: {\n    alignWithTitle: 'callSlider',\n    centered: 'callSlider',\n    centerActive: 'callSlider',\n    fixedTabs: 'callSlider',\n    grow: 'callSlider',\n    iconsAndText: 'callSlider',\n    right: 'callSlider',\n    showArrows: 'callSlider',\n    vertical: 'callSlider',\n    '$vuetify.application.left': 'onResize',\n    '$vuetify.application.right': 'onResize',\n    '$vuetify.rtl': 'onResize',\n  },\n\n  mounted () {\n    this.$nextTick(() => {\n      window.setTimeout(this.callSlider, 30)\n    })\n  },\n\n  methods: {\n    callSlider () {\n      if (\n        this.hideSlider ||\n        !this.$refs.items ||\n        !this.$refs.items.selectedItems.length\n      ) {\n        this.slider.width = 0\n        return false\n      }\n\n      this.$nextTick(() => {\n        // Give screen time to paint\n        const activeTab = this.$refs.items.selectedItems[0]\n        /* istanbul ignore if */\n        if (!activeTab || !activeTab.$el) {\n          this.slider.width = 0\n          this.slider.left = 0\n          return\n        }\n        const el = activeTab.$el as HTMLElement\n\n        this.slider = {\n          height: !this.vertical ? Number(this.sliderSize) : el.scrollHeight,\n          left: this.vertical ? 0 : el.offsetLeft,\n          right: this.vertical ? 0 : el.offsetLeft + el.offsetWidth,\n          top: el.offsetTop,\n          width: this.vertical ? Number(this.sliderSize) : el.scrollWidth,\n        }\n      })\n\n      return true\n    },\n    genBar (items: VNode[], slider: VNode | null) {\n      const data = {\n        style: {\n          height: convertToUnit(this.height),\n        },\n        props: {\n          activeClass: this.activeClass,\n          centerActive: this.centerActive,\n          dark: this.dark,\n          light: this.light,\n          mandatory: !this.optional,\n          mobileBreakpoint: this.mobileBreakpoint,\n          nextIcon: this.nextIcon,\n          prevIcon: this.prevIcon,\n          showArrows: this.showArrows,\n          value: this.internalValue,\n        },\n        on: {\n          'call:slider': this.callSlider,\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n        ref: 'items',\n      }\n\n      this.setTextColor(this.computedColor, data)\n      this.setBackgroundColor(this.backgroundColor, data)\n\n      return this.$createElement(VTabsBar, data, [\n        this.genSlider(slider),\n        items,\n      ])\n    },\n    genItems (items: VNode | null, item: VNode[]) {\n      // If user provides items\n      // opt to use theirs\n      if (items) return items\n\n      // If no tabs are provided\n      // render nothing\n      if (!item.length) return null\n\n      return this.$createElement(VTabsItems, {\n        props: {\n          value: this.internalValue,\n        },\n        on: {\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n      }, item)\n    },\n    genSlider (slider: VNode | null) {\n      if (this.hideSlider) return null\n\n      if (!slider) {\n        slider = this.$createElement(VTabsSlider, {\n          props: { color: this.sliderColor },\n        })\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-tabs-slider-wrapper',\n        style: this.sliderStyles,\n      }, [slider])\n    },\n    onResize () {\n      if (this._isDestroyed) return\n\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.callSlider, 0)\n    },\n    parseNodes () {\n      let items = null\n      let slider = null\n      const item = []\n      const tab = []\n      const slot = this.$slots.default || []\n      const length = slot.length\n\n      for (let i = 0; i < length; i++) {\n        const vnode = slot[i]\n\n        if (vnode.componentOptions) {\n          switch (vnode.componentOptions.Ctor.options.name) {\n            case 'v-tabs-slider': slider = vnode\n              break\n            case 'v-tabs-items': items = vnode\n              break\n            case 'v-tab-item': item.push(vnode)\n              break\n            // case 'v-tab' - intentionally omitted\n            default: tab.push(vnode)\n          }\n        } else {\n          tab.push(vnode)\n        }\n      }\n\n      /**\n       * tab: array of `v-tab`\n       * slider: single `v-tabs-slider`\n       * items: single `v-tabs-items`\n       * item: array of `v-tab-item`\n       */\n      return { tab, slider, items, item }\n    },\n  },\n\n  render (h): VNode {\n    const { tab, slider, items, item } = this.parseNodes()\n\n    return h('div', {\n      staticClass: 'v-tabs',\n      class: this.classes,\n      directives: [{\n        name: 'resize',\n        modifiers: { quiet: true },\n        value: this.onResize,\n      }],\n    }, [\n      this.genBar(tab, slider),\n      this.genItems(items, item),\n    ])\n  },\n})\n"],"sourceRoot":""}